trigger:
  branches:
    include:
    - main
resources:
  repositories:
  - repository: self
    type: git
    ref: main
jobs:
- job: Job_1
  displayName: Terraform Deploy
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - checkout: self
  - task: TerraformInstaller@0
    displayName: terraform install
    inputs:
      terraformversion: 'latest'
  - task: TerraformTaskV2@2
    displayName: 'Terraform : INIT'
    inputs:
      provider: 'azurerm'
      command: 'init'
      backendServiceArm: '03c4c8c9-66a9-42b7-a06e-9a07e2c186f2'
      backendAzureRmResourceGroupName: 'eval-rg'
      backendAzureRmStorageAccountName: 'tfstateac'
      backendAzureRmContainerName: 'tfstate'
      backendAzureRmKey: 'terraform.tfstate'
  - task: TerraformTaskV2@2
    displayName: 'Terraform : PLAN'
    inputs:
      command: plan
      environmentServiceNameAzureRM: 03c4c8c9-66a9-42b7-a06e-9a07e2c186f2
      commandOptions: -input=false -var "RG_NAME=$(TF_VAR_RG_NAME)" "RG_NAME=$(TF_VAR_KV_NAME)"
  - task: TerraformTaskV2@2
    displayName: 'Terraform : VAL & APPLY'
    inputs:
      command: apply
      environmentServiceNameAzureRM: 03c4c8c9-66a9-42b7-a06e-9a07e2c186f2
      backendServiceArm: 03c4c8c9-66a9-42b7-a06e-9a07e2c186f2
      commandOptions: -input=false -var "RG_NAME=$(TF_VAR_RG_NAME)" "RG_NAME=$(TF_VAR_KV_NAME)"
